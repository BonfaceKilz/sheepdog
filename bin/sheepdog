#! /home/wrk/opt/sheepdog/bin/guile -s
!#

(use-modules (ice-9 format)
             (ice-9 match)
             (srfi srfi-1)
             (srfi srfi-26)
             (sheepdog actors)
             (sheepdog command)
             (sheepdog email)
             (sheepdog bark))

(define %program-arguments
  (match (program-arguments)
    ((_)
     (display "You need to provide an argument. See sheepdog --help\n")
     (exit 0))
    ((_ args ...)
     args)))

(define %options
  (list (option '(#\c "config") #t #f
                (lambda (opt name arg result)
                  (alist-cons 'config arg result)))
        (option '(#\a "action") #t #f
                (lambda (opt name arg result)
                  (alist-cons 'action arg result)))
        (option '(#\v "version") #f #f
                (lambda args
                  (show-version)
                  (exit 0)))
        (option '("enable-email")#f #f
                (lambda (opt name arg result)
                  (alist-cons 'email-notification? #t result)))
        (option '(#\h "help") #f #f
                (lambda args
                  (show-help)
                  (exit 0)))))

(define synopsis 'command-synopsis)

(define (show-help)
  (display "Usage: sheepdog [OPTION...]
Run Sheepdog
  -a, --action                 Command, script, lisp code to run
  -m, --mail                   Send notification via e-mail in case of an error
  -c, --config=CONFIG_FILE     Configuration Filename
  -v, --version                Display version
  -h, --help                   Display this help

Notifications
You can choose send a notification via email when running the command.
  --enable-email               In case of an error enable email notifications

Mandatory or optional arguments to long options are also mandatory or optional
for any corresponding short options.

Report bugs to me@bonfacemunyoki.com.

"))

(define (show-version)
  (display "sheepdog version 0.1

Copyright (C) 2021 sheepdog authors
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

"))

(define-command (run-sheepdog . args)
  (synopsis "run the sheepdog command")
  (let* ((opts (args-fold* args %options
                           (lambda (opt name arg result)
                             (display (apply format (list #f "Invalid argument: ~a~%" name)))
                             (exit 1))
                           (lambda (op loads) (cons op loads))
                           '()))
         (action (assoc-ref opts 'action))
         (email-notification? (assoc-ref opts 'email-notification?))
         (conf-file (match (load-config (assoc-ref opts 'config))
                      (((config m ...))
                       m)))
         (redis-conf (assoc-ref conf-file 'redis))
         (from (assoc-ref conf-file 'mailfrom))
         (to (assoc-ref conf-file 'mailto))
         (uri (assoc-ref conf-file 'mailer-uri))
         (host (assoc-ref redis-conf 'host))
         (port (assoc-ref redis-conf 'port)))
    (when (redis-alive? #:host (if host host "127.0.0.1")
                        #:port (if port port 6379))
      ;; should run job as an actor; if an error occurs report to monitor!
      (apply run-job-with-monitor
             `(,action
               #:channel "sheepdog"
               #:host ,(if host host "127.0.0.1")
               #:port ,(if port port 6379)
               ,@(when email-notification?
                   '(#:notify? #t))
               ,@(when email-notification?
                   `(#:procedure ,(cut send-email* <> from to "SHEEPDOG ERROR ALERT!" uri))))))))

(run-sheepdog %program-arguments)
