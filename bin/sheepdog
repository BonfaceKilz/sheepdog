#! /home/wrk/opt/sheepdog/bin/guile -s
!#

;; (use-modules (sjson) (sjson utils))
(use-modules (ice-9 getopt-long)
             (ice-9 format)
             (ice-9 hash-table)
             (ice-9 match))

(define (parse-args args)
  ;; some magic because both -H and --server work
  (let* ((option-spec '(;; (server  (single-char #\H) (value #t))
                        (config  (single-char #\c) (value #t))
                        (version (single-char #\v) (value #f))
                        (help    (single-char #\h) (value #f))))
         (options (getopt-long args option-spec))
         (set-server (option-ref options 'server #f))
         (set-config (option-ref options 'config #f))
         (help-wanted (option-ref options 'help #f))
         (version-wanted (option-ref options 'version #f)))
    (if (or set-config version-wanted help-wanted)
        (begin
          (if set-config
              (display (string-append "config=" set-config "\n")))
          (if version-wanted
              (display "sheepdog version 0.1\n"))
          (if help-wanted
              (display "\
sheepdog [options]
  -c, --config     config-filename
  -v, --version    Display version
  -h, --help       Display this help
"))
          options))))

(display "sheepdog\n")
; (let [(ops (parse-args (command-line)))])

(let* [(op (parse-args (command-line)))
       (config (option-ref op 'config #f))
       ]
  (display
   (match config
     [#f "\nERROR: Please define config file, for now!\n\n"]
     [else (string-append "Reading " config)]))
  (match config
    [#f (raise 2)])
  (let* [(port (open-file config "r"))
         (buf (read port))
         (global (cdr buf))
         ;; remote host, port and mail
         (rhost (match (assoc 'host global)
                 [('host name) name]
                 [else "localhost"]))
         (rport (match (assoc 'port global)
                 [('port num) num]
                 [else 7777]))
         (rmailto (match (assoc 'mailto global)
                 [('mailto name) name]
                 [else #f]))
         ]
    (begin
      (display buf)
  )))
